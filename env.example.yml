# HOW TO USE:
#
# 1 Add environment variables for the various stages here
# 2 Rename this file to env.yml and uncomment its usage in the serverless.yml.
#    provider:
#       name: aws
#       runtime: nodejs8.10
#       stage: dev
#       region: us-east-1
#       # Load environment variables externally from 'env.yml' depending on the stage
#       environment: ${file(env.yml):${self:provider.stage}}
# 3 Make sure to not commit this file.

default: &def
	API_KEY: xxx

dev:
  <<: *def
  # overwrite/extend the default 
  API_KEY: xxx
  # extend the default 
  API_KEY_NEW: xxx

prod:
  <<: *def
  # overwrite/extend the default 
  API_KEY: xxx
  # extend the default 
  API_KEY_NEW: xxx


env:
  # 1. AWS_REGION is reserved env variable from AWS and cannot be set/changed
  # it is always provided in the function later
  # That's why we have to use it only internally and not deploy as env variable
  # 2. use as prop thta could be changed/set ony here and both Serverless-deploy and local AWS-SDK will use the same region
  # 3. this process.env.AWS_REGION is used internally by the AWS-SDK to configure its access to services like DynomoDB, etc.
  AWS_REGION:

  # NOTE!!! in order to make the 'aws-sdk' module (or the 'aws' cli)
  # we have to set some credentials. Easiest way is to create a new profile (in the .aws/credentials file)
  # that has credentials (e.g. key/secret) to an AWS IAM user with such credentials and who has
  # proper permissions/policies defined (in this case to access to SQS - getQueueUrl/SendMessage).
  # The 'AWS_PROFILE' environment variable is used to configure implicitly the 'aws-sdk'.
  AWS_PROFILE:

  # The Google Sheet ID (just use this one on the front-end form app)
  GOOGLE_SHEET_ID:
